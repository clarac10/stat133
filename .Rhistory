order(CAVoters[,3])
oYear = order(CAVoters[,3])
otCAVoters = tCAVoters[, oYear]
tCAVoters
barplot(otCAVoters, beside = TRUE)
barplot(otCAVoters)
barplot(otCAVoters, beside = TRUE)
barplot(otCAVoters, beside = TRUE, col=c("blue", "red"))
county = read.csv(url("http://www.stat.berkeley.edu/users/nolan/data/CAVoters.rda"))
county = read.csv(url("http://www.stat.berkeley.edu/users/nolan/data/CAVoters.rda"))
load(url("http://www.stat.berkeley.edu/users/nolan/data/CAVoters.rda"))
matplot(voters$year, voters[, 4:7])
matplot(voters$year, CAvoters[, 4:7])
matplot(CAvoters$year, CAvoters[, 4:7])
matplot(CAVoters$year, CAVoters[, 4:7])
matplot(CAVoters$year, CAVoters[, 4:7] type="l", lwd = 3)
matplot(CAVoters$year, CAVoters[, 4:7], type="l", lwd = 3)
matplot(CAVoters$year, CAVoters[, 4:7], type="l", lwd = 3, xaxt = "n", xlab = "Year")
axis(1, at = seq(1992, 2008,4))
partyColor = c(dem = "blue", rep = "red", other = "green", decline = "black")
party = c(dem = "Democrat", rep = "Republican" other = "Other", decline = "Decline")
party = c(dem = "Democrat", rep = "Republican" other = "Other", decline = "Decline")
party = c(dem="Democrat", rep="Republican", other = "Other", decline = "Decline")
party
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", lwd = 3, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters", axis(1, at=seq(1992,2008,4))
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 0.7, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1.5, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1.5, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 2, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
axis(1, at = seq(1992, 2008, 4))
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
matplot(CAVoters$year, 100*CAVoters[,4:7], type = "l", xaxt = "n", xlab = "Year", lty = 1, col = partyColor[names(CAVoters)[4:7]], ylab = "Percent", main = "Party Affiliation of Registered Voters")
axis(1, at = seq(1992, 2008, 4))
legend(1992, 30, lengend = party, fill = partyColor[names(party))], cex = 0.7)
legend(1992, 30, lengend = party, fill = partyColor[names(party))],cex = 0.7)
legend(1992, 30, lengend=party, fill = partyColor[names(party)],cex = 0.7)
legend(1992, 30, lengend=party, fill=partyColor[names(party)],cex = 0.7)
legend(1992, 30, lengend=party, fill=partyColor[names(party)], cex=1)
legend(1992, 30, party, fill=partyColor[names(party)], cex=1)
legend(1992, 30, party, fill=partyColor[names(party)], cex=0.7)
legend(1992, 30, party, fill=partyColor[names(party)], cex=1)
myData = read.table(url("http://www.stat.berkeley.edu/users/nolan/data/CO2Nations.txt"), header = TRUE, sep ="\t")
head(myData)
rm()
w = read.table("http://www.stat.berkeley.edu/users/nolan/data/wireless.txt", header = TRUE)
class(w)
names(w)
dim(w)
ap = w[255:259]
ap = w[255:259,]
w = w[-(255:259)]
w = w[-(255:259),]
w[,1]
w
ap
ap[1,2]
D1 = sqrt((w[,1]-ap[1,1])^2 + (w[,2]-ap[1,2])^2)
plot(w[,3] ~D1)
install.packages("nycflights13")
library(nycflights13)
data(flights)
library(nycflights13)
data(flights)
names(flights)
`help(flights)
help(flights)
`
help(flights)
flights
class(flights)
nrow(flights)
dim(flights)
length(flights)
library(nycflights13)
install.packages(nycflights13)
install.packages("nycflights13")
library(nycflights13)
data(flights)
help(flights)
num_rows = nrow(flights)
num_rows
num_vars = length(flights)
num_vars
names(flights)
longest_dep_delay = which.max(flights$dep_delay)
longest_dep_delay
flights$arr_time - flights$dep_time
flights$dep_time[1]
names(flights)
flights$dep_time
flights$dep_time[1:10]
num_rows
flights$dep_time[20:30]
ua_delay = mean(flights$dep_delay)
ua_delay
mean(flights$dep_delay)
names(flights)
View(flights)
airports(UA)
airlines
airlines$UA
names(airlines)
airlines$carrier
UA
airlines$name
mean(airlines$name[12])
data(flights)
help("aggregate")
aggregate(flights$arr_delay, by=list(flights$carrier), mean, na.rm=TRUE)
aggregate(flights$arr_delay, by=list(flights$carrier)[12], mean, na.rm=TRUE)
aggregate(flights$arr_delay, by=list(flights$carrier), mean, na.rm=TRUE)[12]
aggregate(flights$arr_delay, by=list(flights$carrier), mean, na.rm=TRUE)
flights$carrier[12]
flights$carrier[11]
flights$carrier[12]
names(flights)
?flights
data(flights)
flights$air_time
a = c(1:10)
sort(a)
longest_flights = tail(sort(flights$air_time), 10)
longest_flights
flights$arr_time[1:10] - flights$dep_time[1:10]
flights$arr_time - flights$dep_time
names(flights)
flights$carrier
flights$carrier[UA]
class(flights$carrier)
flights$dep_delay
1+1
1+1
2 + 3
1 + 1
2 + 3
#These two lines add numbers together
1 + 1
2 + 3
c(1, 2, 3)
c(1,2,3) + c(4,5,6)
c(1,2,3) * c(1,2,3)
x = c(1, 2, 3)
y = c(4, 5, 6)
x * y
x / y
3*x
3 + x
mean(x)
median(y)
help(mean)
?mean
5 == 2 + 3
4 == 2 + 3
5 <= 2 + 6
2 != 1 + 1
x = 5
3 > x & x < 7
3 < x & x < 7
x[2]
x = c(1, 3, 5, 7, 9)
x[2]
x[c(1, 3, 5)]
x[c(TRUE, FALSE, FALSE, FALSE, TRUE)]
x < 6
x[x < 6]
x = c(1, 2, 3, 3, 3)
length(x)
summary(x)
ls()
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
scored[7]
scored[1:5]
scored[list(by=2)]
(1:16)//2 = 0
2//4
4//2
last(scored)
end(scored)
scored[16]
scored[scored > 14]
scored[scored == 14]
scored[c(2,4,6,8,10,12,14,16)]
scored[16]
scored[scored == 13 | scored == 14]
scored[scored > 7 & scored < 21]
seq(1:16, 2)
seq(1, 16, 2)
scored[seq(1, 16, 2)]
scored[seq(2, 16, 2)]
scored[c(2,4,6,8,10,12,14,16)]
scored[seq(2, length(scored), 2)]
scored[length(scored)]
help(sort)
sort(scored, decreasing = TRUE)
max(scored)
min(scored)
mean(scored)
summary(scored)
length(scored[scored > 20])
scored[7] + against[7]
sum(scored[12:16])
sum(scored[12:16]) + sum(against[12:16])
scored[seq(1,16,2)] - against[seq(1,16,2)]
abs(scored[seq(1,16,2)] - against[seq(1,16,2)])
scored == against
scored > against
list(scored > against)
c(scored[12]+against[12], scored[13]+against[13], scored[14]+against[14], scored[15]+against[15], scored[16]+against[16])
abs(scored[seq(1,16,2)] - against[seq(1,16,2)])
scored[scored > against]
abs(scored[seq(1,16,2)] - against[seq(1,16,2)])
scored == against
scored[scored > against]
scored == against
scored[scored > against]
?Position
which(scored[scored > against])
which(scored > against)
abs(scored[seq(1,16,2)] - against[seq(1,16,2)])
library(nycflights13)
data(flights)
num_rows = nrow(flights)
num_rows
num_vars = length(flights)
num_vars
longest_dep_delay = which.max(flights$dep_delay)
longest_dep_delay
#Is air time correct variable to use?
longest_flights = tail(sort(flights$air_time), 10)
longest_flights
longest_flights
aggregate(flights$arr_delay, by=list(flights$carrier), mean, na.rm=TRUE)
list(flights$carrier)
install.packages("knitr")
library(nycflights13)
data(flights)
summary(flights)
summary(flights$carrier)
summary(flight$airline)
summary(flights$airline)
k = (1, 3, 4, 5, 6, 7)
k = c(1, 3, 4, 5, 6, 7)
ncol(k)
rm(k)
w = read.table("http://www.stat.berkeley.edu/users/nolan/data/wireless.txt", header = TRUE)
length(w)
rm(w)
length(flights)
summary(nycflights13)
nycflights13::
longest_dep_delay
flights$carrier[arr_delay]
flights$carrier[dep_delay]
flights$carrier[mean(flights$dep_delay)]
flights$month[mean(flights$month)]
flights$month[mean(flights$dep_delay)]
mean(flights$month)
summary(flights$month)
names(flights)
length(flights$distance > 1000)
flights$distance > 1000
length(flights$distance > 1000)
summary(flights)
?flights
flights$origin
flights$origin["JFK"]
length(flights$origin == JFK)
length(flights$origin == "JFK")
length(flights$origin == "LGA")
length(flights$origin == "EWR")
flights$origin == JFK
flights$origin == "JFK"
?length
v = c(1,2,3,4)
length(v > 3)
length(v[v>3])
lenth(flights$origin[flights$origin == "JFK" & flights$origin > 1000])
length(flights$origin[flights$origin == "JFK" & flights$origin > 1000])
names(flights)
jfk_1000mi = length(flights$origin[flights$origin == "JFK" & flights$distance > 1000])
jfk_1000mi
jfk_1000mi = length(flights[flights$origin == "JFK" & flights$distance > 1000])
jfk_1000mi = length(flights$origin[flights$origin == "JFK" & flights$distance > 1000])
length(flights$origin[flights$origin == "JFK"])
flights$origin[flights$origin == "JFK"])
flights$origin[flights$origin == "JFK"]
flights$origin[flights$distance > 1000]
length(flights$origin == "LGA" & flights$dest == "DFW")
flights$origin == "LGA" & flights$dest == "DFW"
flights[flights$origin == "LGA" & flights$dest == "DFW"]
flights$airlines[flights$origin == "LGA" & flights$dest == "DFW"]
flights$carrier[flights$origin == "LGA" & flights$dest == "DFW"]
length(flights$carrier[flights$origin == "LGA" & flights$dest == "DFW"])
mean(flights$carrier[flights$carrier == "UA"])
mean(flights$carrier[flights$carrier == "UA" & flights$dep_delay])
mean(flights$dep_delay[flights$carrier == "UA"])
which.max(flights$origin == "JFK" )
flights$tailnum[which.max(flights$arr_delay)]
flights$carrier[which.max(flights$origin == "JFK")]
which.max(flights$origin == "JFK")
flights$carrier[3]
flights$carrier[4]
flights$carrier
which.max(v)
v = c("grape", "grape", "grape", "apple", "orange")
which.max(v == "grape")
which.max(v)
rm(v)
max(flights$dep_delay)
which.max(flights$dep_delay)
flights$dep_delay
?flights
max(flights$dep_delay)
summary(flights$dep_delay)
longest_dep_delay
?max
max(flights$dep_delay, na.rm = TRUE)
longest_dep_delay = max(flights$dep_delay, na.rm = TRUE)
longest_dep_delay
longest_flights = tail(sort(flights$air_time), 10)
longest_flights
?tail
?sort
longest_flights = tail(sort(flights$air_time, decreasing = TRUE), 10)
longest_flights
longest_flights = tail(sort(flights$air_time, decreasing = FALSE), 10)
longest_flights
longest_flights = head(sort(flights$air_time, decreasing = FALSE), 10)
longest_flights
names(flights)
flights$dep_delay[flights$carrier == "UA"]
mean(flights$dep_delay[flights$carrier == "UA"])
help("mean")
mean(flights$dep_delay[flights$carrier == "UA"], na.rm = TRUE)
ua_delay = mean(flights$dep_delay[flights$carrier == "UA"], na.rm = TRUE)
ua_delay
flights$month[flights$dep_delay]
flights$delay[flights$month]
flights$month
?flights
flights$year
flights$day
flights$month
flights$tailnum[flights$carrier]
flights$carrier[flights$tailnum]
flights$tailnum
which(flights$tailnum[flights$carrier == "AA"])
flights$tailnum[flights$carrier == "AA"]
length(flights$tailnum[flights$carrier == "AA"])
unique(flights$tailnum[flights$carrier == "UA"])
length(unique(flights$tailnum[flights$carrier == "UA"]))
num_planes_aa = length(unique(flights$tailnum[flights$carrier == "UA"]))
num_planes_aa
flights$origin == "JFK"
flights$carrier[flights$origin == "JFK"]
flights$carrier[which.max(flights$carrier[flights$origin == "JFK"])]
flights$carrier[which.max(flights$carrier[flights$origin == "JFK"]), na.rm = TRUE]
table(flights$carrier[flights$origin == "JFK"])
which.max(table(flights$carrier[flights$origin == "JFK"]))
seeq(from = 1, to = 6, by = 2)
seq(from = 1, to = 6, by = 2)
seq(1, 6, 2)
seq(1, 6)
x = c(13, 6, 18, 2, 11)
sort(x, decreasing = TRUE)
order(x, decreasing = TRUE)
x = c(1, 2, 3, 4, 5)
tail(x, 3)
which(c(TRUE, TRUE, FALSE, TRUE, FALSE))
x = c(1,2,3,4,5)
which(x = 3)
which(x <= 3)
x = c(1, 2, 10)
y = seq(1,5)
x%iny
x%in%y
x = c(13, 6, 18, 2, 11)
sort(x, decreasing = TRUE)
longest_flights = head(sort(sum(flights$air_time, flights$dep_delay), decreasing = TRUE), 10)
longest_flights
longest_flights = head(sort(flights$air_time, decreasing = TRUE), 10)
longest_flights
flights$month
mean(flights$month==1)
mean(flights$dep_delay[flights$month == 1])
mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
month_delay = sort(mean(flights$dep_delay[flights$month == 1], na.rm = TRUE), mean(flights$dep_delay[flights$month == 2], na.rm = TRUE), mean(flights$dep_delay[flights$month == 3], na.rm = TRUE), mean(flights$dep_delay[flights$month == 4], na.rm = TRUE),
mean(flights$dep_delay[flights$month == 5], na.rm = TRUE), mean(flights$dep_delay[flights$month == 6], na.rm = TRUE), mean(flights$dep_delay[flights$month == 7], na.rm = TRUE), mean(flights$dep_delay[flights$month == 8], na.rm = TRUE),
mean(flights$dep_delay[flights$month == 9], na.rm = TRUE), mean(flights$dep_delay[flights$month == 10], na.rm = TRUE), mean(flights$dep_delay[flights$month == 11], na.rm = TRUE), mean(flights$dep_delay[flights$month == 12], na.rm = TRUE), decreasing = TRUE)
mJan = mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
mJan
mFeb = mean(flights$dep_delay[flights$month == 2], na.rm = TRUE)
mFeb
mMar = mean(flights$dep_delay[flights$month == 3], na.rm = TRUE)
mMar
mApr = mean(flights$dep_delay[flights$month == 4], na.rm = TRUE)
mApr
mMay = mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
mMay
mMay = mean(flights$dep_delay[flights$month == 5], na.rm = TRUE)
mJun = mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
mMay
mJun
mJun = mean(flights$dep_delay[flights$month == 6], na.rm = TRUE)
mJun
mJul = mean(flights$dep_delay[flights$month == 7], na.rm = TRUE)
mJul
mAug = mean(flights$dep_delay[flights$month == 8], na.rm = TRUE)
mAug
mSep = mean(flights$dep_delay[flights$month == 9], na.rm = TRUE)
mSep
mOct = mean(flights$dep_delay[flights$month == 10], na.rm = TRUE)
mOct
mNov = mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
mNov
mNov = mean(flights$dep_delay[flights$month == 11], na.rm = TRUE)
mNov
mDec = mean(flights$dep_delay[flights$month == 12], na.rm = TRUE)
mDec
mNov = mean(flights$dep_delay[flights$month == 11], na.rm = TRUE)
mNov
month_delay = sort(mJan, mFeb, mMar, mMay, mJun, mJul, mAug, mSep, mOct, mNov, mDec, decreasing = TRUE)
month_delay = sort(c(mJan, mFeb, mMar, mMay, mJun, mJul, mAug, mSep, mOct, mNov, mDec), decreasing = TRUE)
month_delay
month_delay = sort(c(mJan, mFeb, mMar, mApr, mMay, mJun, mJul, mAug, mSep, mOct, mNov, mDec), decreasing = TRUE)
month_delay
mean(flights$dep_delay[which(flights$month==1)],na.rm=TRUE)
mJan
library(nycflights13)
data(flights)
#How many rows are in this data frame?
num_rows = nrow(flights)
num_rows
#How many variables are in this data frame?
num_vars = length(flights)
num_vars
longest_dep_delay = max(flights$dep_delay, na.rm = TRUE)
longest_dep_delay
longest_flights = head(sort(flights$air_time, decreasing = TRUE), 10)
longest_flights
ua_delay = mean(flights$dep_delay[flights$carrier == "UA"], na.rm = TRUE)
ua_delay
mJan = mean(flights$dep_delay[flights$month == 1], na.rm = TRUE)
mFeb = mean(flights$dep_delay[flights$month == 2], na.rm = TRUE)
mMar = mean(flights$dep_delay[flights$month == 3], na.rm = TRUE)
mApr = mean(flights$dep_delay[flights$month == 4], na.rm = TRUE)
mMay = mean(flights$dep_delay[flights$month == 5], na.rm = TRUE)
mJun = mean(flights$dep_delay[flights$month == 6], na.rm = TRUE)
mJul = mean(flights$dep_delay[flights$month == 7], na.rm = TRUE)
mAug = mean(flights$dep_delay[flights$month == 8], na.rm = TRUE)
mSep = mean(flights$dep_delay[flights$month == 9], na.rm = TRUE)
mOct = mean(flights$dep_delay[flights$month == 10], na.rm = TRUE)
mNov = mean(flights$dep_delay[flights$month == 11], na.rm = TRUE)
mDec = mean(flights$dep_delay[flights$month == 12], na.rm = TRUE)
month_delay = sort(c(mJan, mFeb, mMar, mApr, mMay, mJun, mJul, mAug, mSep, mOct, mNov, mDec), decreasing = TRUE)
month_delay
num_planes_aa = length(unique(flights$tailnum[flights$carrier == "UA"]))
num_planes_aa
jfk_1000mi = length(flights$origin[flights$origin == "JFK" & flights$distance > 1000])
jfk_1000mi
num_lga_dfw = length(flights$carrier[flights$origin == "LGA" & flights$dest == "DFW"])
num_lga_dfw
most_flights_jfk = which.max(table(flights$carrier[flights$origin == "JFK"]))
most_flights_jfk
table(flights$carrier[flights$origin == "JFK"])
tail(tents, 4)
setwd("/Users/Clara/Documents/Stat_133/stat133")
library(readr)
tents <- read_csv("tents.csv", col_types = "ccnniccc")
setwd("/Users/Clara/Documents/Stat_133/stat133-su2016/lab")
setwd("/Users/Clara/Documents/")
setwd("/Users/Clara/Documents/Stat_133/stat133-su2016/03-lesson/lab")
library(readr)
tents <- read_csv("tents.csv", col_types = "ccnniccc")
head(tents, 5)
tail(tents, 4)
which.max(table(tents$bestuse))
setwd("/Users/Clara/Documents/Stat_133/stat133")
scored <- c(14, 14, 9, 14, 28, 13, 13, 24, 17, 6, 24, 0, 24, 13, 26, 14)
against <- c(19, 30, 16, 38, 31, 24, 23, 30, 41, 13, 20, 52, 13, 31, 24, 47)
# How many points did the Raiders score in game 7?
scored[7]
scored[1:5]
scored[seq(2, length(scored), 2)]
scored[7] + against[7]
length(scored[scored > 20])
c(scored[12]+against[12], scored[13]+against[13], scored[14]+against[14], scored[15]+against[15], scored[16]+against[16])
which(scored > against)
scored == against
?with
num_planes_aa = length(unique(flights$tailnum[flights$carrier == "UA"]))
num_planes_aa
unique(flights$tailnum[flights$carrier == "UA"])
flights$origin[flights$origin == "JFK" & flights$distance > 1000]
flights[flights$origin == "JFK" & flights$distance > 1000]
flights$origin == "JFK" & flights$distance > 1000
sum(flights$origin == "JFK" & flights$distance > 1000)
sum(flights$origin == "LGA" & flights$dest == "DFW")
table(flights$carrier[flights$origin == "JFK"])
sort(table(flights$carrier[flights$origin == "JFK"]), decreasing = T)
names(sort(table(flights$carrier[flights$origin == "JFK"]), decreasing = T))[1]
most_flights_jfk = names(sort(table(flights$carrier[flights$origin == "JFK"]), decreasing = T))[1]
most_flights_jfk
most_flights_jfk = names(sort(table(flights$carrier[flights$origin == "JFK"]), decreasing = T))[1]
most_flights_jfk
most_flights_jfk = names(sort(table(flights$carrier[flights$origin == "JFK"]), decreasing = T))[1]
most_flights_jfk
